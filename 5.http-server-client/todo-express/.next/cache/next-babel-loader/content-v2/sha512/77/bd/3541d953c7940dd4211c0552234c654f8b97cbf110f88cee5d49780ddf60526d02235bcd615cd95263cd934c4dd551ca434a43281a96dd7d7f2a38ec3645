{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hayaki/work/node-pra/node-handson/5.http-server-client/todo-express/components/Todos.js\";\n// 外部モジュールで公開されたものを利用するためのimport文\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport 'isomorphic-fetch'; // 各ページに関する情報の定義\n\nconst pages = {\n  index: {\n    title: 'すべてのTodo',\n    fetchQuery: ''\n  },\n  active: {\n    title: '未完のTodo',\n    fetchQuery: '?completed=false'\n  },\n  completed: {\n    title: '完了のTodo',\n    fetchQuery: '?completed=true'\n  }\n}; // CSRでページを変えるためのリンク\n\nconst pageLinks = Object.keys(pages).map((page, index) => {\n  /*#__PURE__*/\n  _jsxDEV(Link, {\n    href: `/${page === 'index' ? '' : page}`,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        marginRight: 10\n      },\n      children: pages[page].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}); // Reactコンポーネントを実装し、外部のモジュールで利用可能なようexport文で公開\n\nexport default function Todos(props) {\n  const {\n    title,\n    fetchQuery\n  } = pages[props.page]; // コンポーネントの状態の初期化と、propsの値に応じた更新\n\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]);\n  useEffect(() => {\n    fetch(`/api/todos${fetchQuery}`).then(async res => res.ok ? setTodos(await res.json()) : alert(await res.text()));\n  }, [props.page]); // このコンポーネント描画がするUIをJSX構文で記述して返す\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(({\n        id,\n        title,\n        completed\n      }) => {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: completed ? {\n              textDecoration: 'line-through'\n            } : {},\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pageLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/hayaki/work/node-pra/node-handson/5.http-server-client/todo-express/components/Todos.js"],"names":["useEffect","useState","Link","Head","pages","index","title","fetchQuery","active","completed","pageLinks","Object","keys","map","page","marginRight","Todos","props","todos","setTodos","fetch","then","res","ok","json","alert","text","id","textDecoration"],"mappings":";;;AAAA;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,kBAAP,C,CAEA;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GADG;AAEVC,EAAAA,MAAM,EAAE;AAACF,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GAFE;AAGVE,EAAAA,SAAS,EAAE;AAACH,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B;AAHD,CAAd,C,CAMA;;AACA,MAAMG,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,GAAnB,CAAuB,CAACC,IAAD,EAAOT,KAAP,KAAiB;AACtD;AAAA,UAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGS,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwBA,IAAK,EAA7C;AAAA,2BACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAV;AAAA,gBAAgCX,KAAK,CAACU,IAAD,CAAL,CAAYR;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ,KAAqDD,KAArD;AAAA;AAAA;AAAA;AAAA;AAGH,CAJiB,CAAlB,C,CAMA;;AACA,eAAe,SAASW,KAAT,CAAeC,KAAf,EAAqB;AAChC,QAAM;AAACX,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAsBH,KAAK,CAACa,KAAK,CAACH,IAAP,CAAjC,CADgC,CAGhC;;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,KAAK,CAAE,aAAYb,UAAW,EAAzB,CAAL,CACKc,IADL,CACU,MAAMC,GAAN,IAAaA,GAAG,CAACC,EAAJ,GACbJ,QAAQ,CAAC,MAAMG,GAAG,CAACE,IAAJ,EAAP,CADK,GAEbC,KAAK,CAAC,MAAMH,GAAG,CAACI,IAAJ,EAAP,CAHf;AAKH,GANQ,EAMN,CAACT,KAAK,CAACH,IAAP,CANM,CAAT,CALgC,CAahC;;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQR;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAA,gBAEKY,KAAK,CAACL,GAAN,CAAU,CAAC;AAACc,QAAAA,EAAD;AAAKrB,QAAAA,KAAL;AAAYG,QAAAA;AAAZ,OAAD,KAA4B;AACnC;AAAA;AAAA,iCACI;AAAM,YAAA,KAAK,EAAEA,SAAS,GAAG;AAACmB,cAAAA,cAAc,EAAE;AAAjB,aAAH,GAAsC,EAA5D;AAAA,sBACKtB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,WAASqB,EAAT;AAAA;AAAA;AAAA;AAAA;AAKH,OANA;AAFL;AAAA;AAAA;AAAA;AAAA,YANJ,eAgBI;AAAA,gBAAMjB;AAAN;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAoBH","sourcesContent":["// 外部モジュールで公開されたものを利用するためのimport文\nimport {useEffect, useState} from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport 'isomorphic-fetch';\n\n// 各ページに関する情報の定義\nconst pages = {\n    index: {title: 'すべてのTodo', fetchQuery: ''},\n    active: {title: '未完のTodo', fetchQuery: '?completed=false'},\n    completed: {title: '完了のTodo', fetchQuery: '?completed=true'}\n};\n\n// CSRでページを変えるためのリンク\nconst pageLinks = Object.keys(pages).map((page, index) => {\n    <Link href={`/${page === 'index' ? '' : page}`} key={index}>\n        <a style={{ marginRight: 10 }}>{pages[page].title}</a>\n    </Link>\n})\n\n// Reactコンポーネントを実装し、外部のモジュールで利用可能なようexport文で公開\nexport default function Todos(props){\n    const {title, fetchQuery} = pages[props.page];\n\n    // コンポーネントの状態の初期化と、propsの値に応じた更新\n    const [todos, setTodos] = useState([]);\n    useEffect(() => {\n        fetch(`/api/todos${fetchQuery}`)\n            .then(async res => res.ok\n                ? setTodos(await res.json())\n                : alert(await res.text())\n            )   \n    }, [props.page])\n\n    // このコンポーネント描画がするUIをJSX構文で記述して返す\n    return (\n        <>\n            <Head>\n                <title>{title}</title>\n            </Head>\n            <h1>{title}</h1>\n            {/* TODO一覧の表示 */}\n            <ul>\n                \n                {todos.map(({id, title, completed}) => {\n                    <li key={id}>\n                        <span style={completed ? {textDecoration: 'line-through'} : {}}>\n                            {title}\n                        </span>\n                    </li>\n                })}\n            </ul>\n            <div>{pageLinks}</div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}